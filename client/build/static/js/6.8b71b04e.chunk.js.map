{"version":3,"sources":["component/Pagination.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","connect","employee","user","props","dispatch","useDispatch","React","useState","numOfRow","setNumOfRow","useEffect","Action","resData","PrintPattern","is","i","j","push","console","log","map","pss","index","Fragment","key","TableContainer","className","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","style","maxHeight","overflow","username","password","Mobile","background","border","title","type","onClick","alert","numberOfRow","prompt"],"mappings":"oSAqBMA,EAAYC,aAAW,SAACC,GAAD,MACd,CACXC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYT,EAAMU,YAAYC,OAAO,YAAa,CAChDC,SAAUZ,EAAMU,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,UA0IZC,uBAJS,SAAC,GAAD,MAAa,CACnCC,SADsB,EAAEC,KACTD,YAGFD,EArIf,SAA0BG,GACxB,IAAMC,EAAWC,cADc,GAEfzB,IACgB0B,IAAMC,UAAS,IAHhB,gCAICD,IAAMC,YAJP,mBAIxBC,EAJwB,KAIdC,EAJc,KAK/BC,qBAAU,WACRN,EAASO,SACR,IACH,IAgBIC,EAAUT,EAAMF,SAQhBY,EAAe,SAACL,GAEpB,IADA,IAAIM,EAAK,GACDC,EAAI,EAAGA,GAAKP,EAASA,SAAUO,IACrC,IAAI,IAAIC,EAAI,EAAGA,GAAGD,EAAGC,IACnBF,EAAGG,KAAKF,GAIZ,OADAG,QAAQC,IAAI,OAAQL,GAElBA,EAAGM,KAAI,SAACC,EAAKC,GACX,OACA,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACnBD,EAAMC,EACJ,8BAAOD,EAAI,8BAAkB,QASrC,OACE,kBAAC,IAAME,SAAP,KACE,kBAACE,EAAA,EAAD,CAAgBC,UAAU,cAAcC,UAAWC,KACjD,kBAACC,EAAA,EAAD,CAAOC,aAAW,gBAChB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,WACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,aACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAGJ,kBAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAU,QAAQC,SAAS,WAC1C1B,GAAWA,EAAQQ,KAAI,SAACR,EAASY,GAAV,OACpB,kBAACQ,EAAA,EAAD,CAAWR,IAAKA,GAChB,kBAACS,EAAA,EAAD,CAAWC,MAAM,SAAStB,EAAQ2B,UAClC,kBAACN,EAAA,EAAD,CAAWC,MAAM,SAAStB,EAAQ4B,UAClC,kBAACP,EAAA,EAAD,CAAWC,MAAM,SAAStB,EAAQ6B,QAClC,kBAACR,EAAA,EAAD,CAAWC,MAAM,SACf,4BACEE,MAAO,CAACM,WAAY,OAAQC,OAAQ,QACpCC,MAAM,gBACNlB,UAAU,qBAAqBmB,KAAK,UACrC,kBAAC,IAAD,OACD,4BACET,MAAO,CAACM,WAAY,OAAQC,OAAQ,QACpCG,QAAS,WAAOC,MAAM,UACtBH,MAAM,kBACNlB,UAAU,qBAAqBmB,KAAK,UACrC,kBAAC,IAAD,eAkCjB,6BACE,4BAAQnB,UAAW,kBAAmBoB,QA5FtB,WACnB,IAAIE,EAAcC,OAAO,mBACtBD,EAAc,GACdvC,EAAYuC,KAyFZ,eAEDxC,EACE,kBAACK,EAAD,CAAcL,SAAUA,IAE3B","file":"static/js/6.8b71b04e.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Box from '@material-ui/core/Box';\r\nimport * as Action from '../store/actions';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { formData } from '../apis/FormFack'\r\nimport objectData from '../apis/FormFack'\r\n// table \r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }),\r\n);\r\n\r\nfunction RecipeReviewCard(props) {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [numOfRow, setNumOfRow] = React.useState()\r\n  useEffect(() => {\r\n    dispatch(Action.employeeAction())\r\n  }, [])\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const ListOfName = (datas) => {\r\n    let names = datas.names\r\n    const listItem = names.map((name)=> \r\n      <li key={name}>{name}</li>\r\n    )\r\n    return (\r\n      <ol>{listItem}</ol>\r\n    )\r\n  }\r\n   \r\n  const names = ['keyru', 'italiya', 'hello']\r\n\r\n  let resData = props.employee\r\n\r\n const promptTasken = () =>{\r\n   let numberOfRow = prompt(\"Enter Number :-\")\r\n   if(numberOfRow > 0){\r\n      setNumOfRow(numberOfRow)\r\n   }\r\n }\r\nconst PrintPattern = (numOfRow) => {\r\n  var is = []\r\n  for(let i = 1; i <= numOfRow.numOfRow; i++){\r\n    for(let j = 1; j<=i; j++){\r\n      is.push(i)\r\n    }\r\n  }\r\n  console.log(\"isss\", is)\r\n  return (\r\n    is.map((pss, index)=>{\r\n      return (\r\n      <React.Fragment key={index}>\r\n      {(pss < index)\r\n       ? (<span>{pss}<br /></span> ) : ''\r\n      }\r\n      </React.Fragment>\r\n      )\r\n    })\r\n  )\r\n}\r\n \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableContainer className=\"shadow mb-2\" component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"right\">Name</TableCell>\r\n              <TableCell align=\"right\">Address</TableCell>\r\n              <TableCell align=\"right\">Mobile No</TableCell>\r\n              <TableCell align=\"right\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody style={{ maxHeight:'300px',overflow:'scroll' }}>\r\n              {resData && resData.map((resData, key) => (\r\n                  <TableRow  key={key}>\r\n                  <TableCell align=\"right\">{resData.username}</TableCell>\r\n                  <TableCell align=\"right\">{resData.password}</TableCell>\r\n                  <TableCell align=\"right\">{resData.Mobile}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <button\r\n                      style={{background: 'none', border: 'none'}}\r\n                      title='Edit Employee'\r\n                      className=\"focus:outline-none\" type=\"button\"\r\n                    ><CreateIcon /></button>\r\n                    <button\r\n                      style={{background: 'none', border: 'none'}}\r\n                      onClick={() => {alert(\"hello\")}}\r\n                      title='Delete Employee'\r\n                      className=\"focus:outline-none\" type=\"button\"\r\n                    ><DeleteIcon /></button>\r\n                  </TableCell>\r\n                  </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {/* <div className=\"container\">\r\n        <table className=\"shadow\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Address</td>\r\n              <td>Mobile</td>\r\n              <td>Action</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {formData.map((data, index)=> {\r\n              return(\r\n                <tr key={index}>\r\n                  <td >{data.username}</td>\r\n                  <td >{data.address}</td>\r\n                  <td >{data.Mobile}</td>\r\n                  <td></td>\r\n                </tr>\r\n              )\r\n            })}\r\n        </tbody>\r\n        </table>\r\n      </div>\r\n          \r\n    <ListOfName names={names}/> */}\r\n\r\n    <div>\r\n      <button className={'btn btn-success'} onClick={promptTasken}>Click here</button>\r\n    </div>\r\n    {numOfRow ? \r\n      (<PrintPattern numOfRow={numOfRow} />)\r\n    :\r\n    null\r\n    }\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({user}) => ({\r\n  employee: user.employee\r\n})\r\n\r\nexport default connect(mapStateToProps)(RecipeReviewCard)"],"sourceRoot":""}